#!/usr/bin/env bash
#
# author: Marcelo Barboza <salve.barboza@pm.me>
# date: 2024-01-11

function NEWDEB() {  # {{{
  PKG="$1"
  if [ -n "$(dpkg -l | sed -n "/^ii\s\+\<${PKG}\>\s\+/p")" ]
  then
    echo "Found: ${PKG}"
  else
    echo "Installing package: ${PKG}"
    if echo "$PKG" | grep -qF ':amd64'
    then
      LIB="${PKG/%:amd64/}"
      sudo apt install -y "$LIB"
    else
      sudo apt install -y "$PKG"
    fi
    echo 'Done.'
  fi
}  # }}}

function PKGADD() {  # {{{
  PKG="$1"
  if [ -n "$(dpkg -l | sed -n "/^ii\s\+\<${PKG}\>\s\+/p")" ]
  then
    echo "Found: ${PKG}"
  else
    echo -n "Package ${PKG} not found. Would you like to install it? (y/N) "
    read -r ANSWER
    if [ "${ANSWER}" = 'y' ]
    then
      echo 'Proceeding with package installation.'
      if echo "$PKG" | grep -qF ':amd64'
      then
        LIB="${PKG/%:amd64/}"
        sudo apt install -y "$LIB"
      else
        sudo apt install -y "$PKG"
      fi
      echo 'Done.'
    fi
  fi
}  # }}}

function HELP() {  # {{{
  echo "Don't panic!"
}  # }}}

# TEXT_EDITORS {{{
declare -a TEXT_EDITORS=(
  vim-nox
  vim-gtk3
)
# }}}
# C_DEVELOPMENT {{{
declare -a C_DEVELOPMENT=(
  build-essential
  gdb
  glibc-doc
  universal-ctags
  valgrind
)
# }}}
# CONTAINERS {{{
declare -a CONTAINERS=(
  podman
)
# }}}
# PYTHON_DEVELOPMENT {{{
declare -a PYTHON_DEVELOPMENT=(
  python3-venv
  python3-pip
)
# }}}
# DATABASE {{{
declare -a DATABASE=(
  mariadb-client
  mariadb-server
  postgresql
  postgresql-client
  sqlite3
  sqlite3-doc
)
# }}}
# MAIL_CHAT_AND_NEWS {{{
declare -a MAIL_CHAT_AND_NEWS=(
  abook
  mutt
  w3m
  newsboat
  irssi
)
# }}}
# SYSTEM_MAINTENANCE {{{
declare -a SYSTEM_MAINTENANCE=(
  aptitude
  deborphan
  debsums
  stow
)
# }}}
# FUN_AND_GAMES {{{
declare -a FUN_AND_GAMES=(
  bsdgames
  cowsay
  fortunes
  stockfish
)
# }}}
# FIRMWARE {{{
declare -a FIRMWARE=(
  firmware-realtek
)
# }}}
# SECURITY {{{
declare -a SECURITY=(
  keychain
  pass
  pass-otp
  signify-openbsd
  signify-openbsd-keys
)
# }}}
# BLOGGING {{{
declare -a BLOGGING=(
  hugo
  lowdown
)
# }}}
# COREUTILS {{{
declare -a COREUTILS=(
  9base
  bat
  curl
  fd-find
  figlet
  fzf
  groff
  gtypist
  hub
  ledger
  lf
  ncdu
  nmap
  plocate
  qpdf
  redshift
  ripgrep
  sc
  scrot
  sdcv
  silversearcher-ag
  thefuck
  tmux
  zathura
  zathura-djvu
)
# }}}
# SHELL {{{
declare -a SHELL=(
  dialog
  shellcheck
  shfmt
  xonsh
  xonsh-doc
  zsh
  zsh-autosuggestions
  zsh-doc
  zsh-syntax-highlighting
)
# }}}
# LATEX {{{
declare -a LATEX=(
  texlive-full
)
# }}}
# IMAGE {{{
declare -a IMAGE=(
  blender
  gimp
  inkscape
)
# }}}
# BROWSER {{{
declare -a BROWSER=(
  chromium
  chromium-driver
)
# }}}
# SUCKLESS_SOFTWARE {{{
declare -a SUCKLESS_SOFTWARE=(
  dwm
  suckless-tools
  stterm
  surf
  libx11-dev:amd64
  libxft-dev:amd64
  libxinerama-dev:amd64
  libfreetype6-dev:amd64
  libharfbuzz-dev:amd64
)
# }}}
# ZSA_WALLY {{{
declare -a ZSA_WALLY=(
  libusb-1.0-0-dev:amd64
)
# }}}

PKGS=(  # {{{
  "${TEXT_EDITORS[@]}"
  "${C_DEVELOPMENT[@]}"
  "${CONTAINERS[@]}"
  "${PYTHON_DEVELOPMENT[@]}"
  "${DATABASE[@]}"
  "${MAIL_CHAT_AND_NEWS[@]}"
  "${SYSTEM_MAINTENANCE[@]}"
  "${FUN_AND_GAMES[@]}"
  "${FIRMWARE[@]}"
  "${SECURITY[@]}"
  "${BLOGGING[@]}"
  "${COREUTILS[@]}"
  "${SHELL[@]}"
  "${LATEX[@]}"
  "${IMAGE[@]}"
  "${BROWSER[@]}"
  "${SUCKLESS_SOFTWARE[@]}"
  "${ZSA_WALLY[@]}"
)
# }}}

if [ "$#" -eq 1 ]
then
  case "$1" in
    -n | --prepare-new-system)
      for PKG in "${PKGS[@]}"
      do
        NEWDEB "$PKG"
      done
      ;;
    -i | --install-missing-packages)
      for PKG in "${PKGS[@]}"
      do
        PKGADD "$PKG"
      done
      ;;
    *)
      HELP
      ;;
  esac
else
  HELP
fi

exit 0

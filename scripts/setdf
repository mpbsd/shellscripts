#!/usr/bin/env bash

# ZSHENV {{{
function ZSHENV() {
  ACT="$1"
  SRC="${HOME}/projects/reserved/program/zshenv/zshenv"
  TGT="${HOME}/.zshenv"
  case "$ACT" in
  -i | --install)
    if [ -f "$SRC" ]; then
      if ! [ -L "$TGT" ]; then
        ln -s "$SRC" "$TGT"
      fi
    fi
    ;;
  -u | --uninstall)
    if [ -L "$TGT" ]; then
      unlink "$TGT"
    fi
    ;;
  esac
}
# }}}

# SOURCE {{{
function SOURCE() {
  SRC1='reserved'
  SRC2='dotfiles'

  declare -A ORIG

  ORIG[abook]="$SRC1"
  ORIG[bread]="$SRC1"
  ORIG[git]="$SRC1"
  ORIG[irssi]="$SRC1"
  ORIG[mutt]="$SRC1"

  ORIG[alacritty]="$SRC2"
  ORIG[awesome]="$SRC2"
  ORIG[conky]="$SRC2"
  ORIG[containers]="$SRC2"
  ORIG[kanata_cfg]="$SRC2"
  ORIG[kanata_ctl]="$SRC2"
  ORIG[kitty]="$SRC2"
  ORIG[lf]="$SRC2"
  ORIG[newsboat]="$SRC2"
  ORIG[npm]="$SRC2"
  ORIG[nvim]="$SRC2"
  ORIG[rofi]="$SRC2"
  ORIG[tmux]="$SRC2"
  ORIG[vifm]="$SRC2"
  ORIG[vim]="$SRC2"
  ORIG[zathura]="$SRC2"
  ORIG[zsh]="$SRC2"

  PKG="$1"
  echo "${HOME}/projects/${ORIG[$PKG]}/program"
}
# }}}

# TARGET {{{
function TARGET() {
  declare -A DEST

  DEST[abook]='.abook'
  DEST[bread]='.local/share/bookmarks'
  DEST[git]='.config/git'
  DEST[irssi]='.irssi'
  DEST[mutt]='.mutt'

  DEST[alacritty]='.config/alacritty'
  DEST[awesome]='.config/awesome'
  DEST[conky]='.config/conky'
  DEST[containers]='.config/containers'
  DEST[kanata_cfg]='.config/kanata'
  DEST[kanata_ctl]='.config/systemd/user'
  DEST[kitty]='.config/kitty'
  DEST[lf]='.config/lf'
  DEST[newsboat]='.config/newsboat'
  DEST[npm]='.config/npm'
  DEST[nvim]='.config/nvim'
  DEST[rofi]='.config/rofi'
  DEST[tmux]='.config/tmux'
  DEST[vifm]='.config/vifm'
  DEST[vim]='.vim'
  DEST[zathura]='.config/zathura'
  DEST[zsh]='.config/zsh'

  PKG="$1"
  echo "${HOME}/${DEST[$PKG]}"
}
# }}}

# INSTALL {{{
function INSTALL() {
  PKG="$1"
  SRC=$(SOURCE "$PKG")
  TGT=$(TARGET "$PKG")
  [ -d "$TGT" ] && exit 2
  mkdir -p "$TGT"
  stow --restow --dir="$SRC" --target="$TGT" "$PKG"
  [ "$PKG" == 'zsh' ] && ZSHENV --install
}
# }}}

# UNINSTALL {{{
function UNINSTALL() {
  PKG="$1"
  SRC=$(SOURCE "$PKG")
  TGT=$(TARGET "$PKG")
  [ -d "$TGT" ] || exit 3
  stow --delete --dir="$SRC" --target="$TGT" "$PKG"
  rm -rf "$TGT"
  [ "$PKG" == 'zsh' ] && ZSHENV --uninstall
}
# }}}

# AVAILABLE_DOTFILES {{{
function AVAILABLE_DOTFILES() {
  printf 'There are dotfiles currently available for the following programs:\n
  \t- abook
  \t- bread
  \t- alacritty
  \t- awesome
  \t- conky
  \t- containers
  \t- git
  \t- irssi
  \t- mutt
  \t- kanata
  \t- kitty
  \t- lf
  \t- newsboat
  \t- npm
  \t- nvim
  \t- rofi
  \t- tmux
  \t- vifm
  \t- vim
  \t- zathura
  \t- zsh\n\n'
}
# }}}

# HELP {{{
function HELP() {
  echo 'Help message'
}
# }}}

# Where all the magic actually happens {{{
if [ "$#" -eq 2 ]; then
  ACT="$1"
  PKG="$2"
  case "$ACT" in
  -i | --install)
    case "$PKG" in
    abook)
      INSTALL abook
      ;;
    bread)
      INSTALL bread
      ;;
    git)
      INSTALL git
      ;;
    irssi)
      INSTALL irssi
      ;;
    mutt)
      INSTALL mutt
      ;;
    alacritty)
      INSTALL alacritty
      ;;
    awesome)
      INSTALL awesome
      ;;
    conky)
      INSTALL conky
      ;;
    containers)
      INSTALL containers
      ;;
    kanata)
      INSTALL kanata_cfg
      INSTALL kanata_ctl
      ;;
    kitty)
      INSTALL kitty
      ;;
    lf)
      INSTALL lf
      ;;
    newsboat)
      INSTALL newsboat
      ;;
    npm)
      INSTALL npm
      ;;
    nvim)
      INSTALL nvim
      ;;
    rofi)
      INSTALL rofi
      ;;
    tmux)
      INSTALL tmux
      ;;
    vifm)
      INSTALL vifm
      ;;
    vim)
      INSTALL vim
      ;;
    zathura)
      INSTALL zathura
      ;;
    zsh)
      INSTALL zsh
      ;;
    all)
      INSTALL abook
      INSTALL bread
      INSTALL git
      INSTALL irssi
      INSTALL mutt
      INSTALL alacritty
      INSTALL awesome
      INSTALL conky
      INSTALL containers
      INSTALL kanata_cfg
      INSTALL kanata_ctl
      INSTALL kitty
      INSTALL lf
      INSTALL newsboat
      INSTALL npm
      INSTALL nvim
      INSTALL rofi
      INSTALL tmux
      INSTALL vifm
      INSTALL vim
      INSTALL zathura
      INSTALL zsh
      ;;
    *)
      AVAILABLE_DOTFILES
      ;;
    esac
    ;;
  -u | --uninstall)
    case "$PKG" in
    abook)
      UNINSTALL abook
      ;;
    bread)
      UNINSTALL bread
      ;;
    git)
      UNINSTALL git
      ;;
    irssi)
      UNINSTALL irssi
      ;;
    mutt)
      UNINSTALL mutt
      ;;
    alacritty)
      UNINSTALL alacritty
      ;;
    awesome)
      UNINSTALL awesome
      ;;
    conky)
      UNINSTALL conky
      ;;
    containers)
      UNINSTALL containers
      ;;
    kanata)
      UNINSTALL kanata_cfg
      UNINSTALL kanata_ctl
      ;;
    kitty)
      UNINSTALL kitty
      ;;
    lf)
      UNINSTALL lf
      ;;
    newsboat)
      UNINSTALL newsboat
      ;;
    npm)
      UNINSTALL npm
      ;;
    nvim)
      UNINSTALL nvim
      ;;
    rofi)
      UNINSTALL rofi
      ;;
    tmux)
      UNINSTALL tmux
      ;;
    vifm)
      UNINSTALL vifm
      ;;
    vim)
      UNINSTALL vim
      ;;
    zathura)
      UNINSTALL zathura
      ;;
    zsh)
      UNINSTALL zsh
      ;;
    all)
      UNINSTALL abook
      UNINSTALL bread
      UNINSTALL git
      UNINSTALL irssi
      UNINSTALL mutt
      UNINSTALL alacritty
      UNINSTALL awesome
      UNINSTALL conky
      UNINSTALL containers
      UNINSTALL kanata_cfg
      UNINSTALL kanata_ctl
      UNINSTALL kitty
      UNINSTALL lf
      UNINSTALL newsboat
      UNINSTALL npm
      UNINSTALL nvim
      UNINSTALL rofi
      UNINSTALL tmux
      UNINSTALL vifm
      UNINSTALL vim
      UNINSTALL zathura
      UNINSTALL zsh
      ;;
    *)
      AVAILABLE_DOTFILES
      ;;
    esac
    ;;
  *)
    HELP
    ;;
  esac
else
  HELP
fi
# }}}

exit 0

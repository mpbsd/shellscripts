#!/usr/bin/env bash

function SOURCE() {
  SRC1='reserved'
  SRC2='dotfiles'

  declare -A ORIG

  ORIG[abook]="$SRC1"
  ORIG[git]="$SRC1"
  ORIG[irssi]="$SRC1"
  ORIG[mutt]="$SRC1"
  ORIG[kanata]="$SRC2"
  ORIG[systemd]="$SRC2"
  ORIG[tmux]="$SRC2"
  ORIG[vim]="$SRC2"
  ORIG[zsh]="$SRC2"

  PKG="$1"
  echo "${HOME}/projects/${ORIG[$PKG]}/program"
}

function TARGET() {
  declare -A DEST

  DEST[abook]='.abook'
  DEST[git]='.config/git'
  DEST[irssi]='.irssi'
  DEST[mutt]='.mutt'
  DEST[kanata]='.config/kanata'
  DEST[systemd]='.config/systemd/user'
  DEST[tmux]='.config/tmux'
  DEST[vim]='.vim'
  DEST[zsh]='.config/zsh'

  PKG="$1"
  echo "${HOME}/${DEST[$PKG]}"
}

function INSTALL() {
  PKG="$1"
  SRC=$(SOURCE "$PKG")
  TGT=$(TARGET "$PKG")
  [ -d "$TGT" ] && exit 2
  mkdir -p "$TGT"
  stow --restow --dir="$SRC" --target="$TGT" "$PKG"
}

function UNINSTALL() {
  PKG="$1"
  SRC=$(SOURCE "$PKG")
  TGT=$(TARGET "$PKG")
  [ -d "$TGT" ] || exit 3
  stow --delete --dir="$SRC" --target="$TGT" "$PKG"
  rm -rf "$TGT"
}

function AVAILABLE_DOTFILES() {
  printf 'There are dotfiles currently available for the following programs:\n
  \t- abook
  \t- git
  \t- irssi
  \t- mutt
  \t- kanata
  \t- tmux
  \t- vim
  \t- zsh\n\n'
}

function HELP() {
  echo 'Help message'
}

if [ "$#" -eq 2 ]; then
  ACT="$1"
  PKG="$2"
  case "$ACT" in
    -i | --install)
      case "$PKG" in
        abook)
          INSTALL abook
          ;;
        git)
          INSTALL git
          ;;
        irssi)
          INSTALL irssi
          ;;
        mutt)
          INSTALL mutt
          ;;
        kanata)
          INSTALL kanata
          INSTALL systemd
          ;;
        tmux)
          INSTALL tmux
          ;;
        vim)
          INSTALL vim
          ;;
        zsh)
          INSTALL zsh
          ;;
        all)
          INSTALL abook
          INSTALL git
          INSTALL irssi
          INSTALL mutt
          INSTALL kanata
          INSTALL systemd
          INSTALL tmux
          INSTALL vim
          INSTALL zsh
          ;;
        *)
          AVAILABLE_DOTFILES
          ;;
      esac
      ;;
    -u | --uninstall)
      case "$PKG" in
        abook)
          UNINSTALL abook
          ;;
        git)
          UNINSTALL git
          ;;
        irssi)
          UNINSTALL irssi
          ;;
        mutt)
          UNINSTALL mutt
          ;;
        kanata)
          UNINSTALL kanata
          UNINSTALL systemd
          ;;
        tmux)
          UNINSTALL tmux
          ;;
        vim)
          UNINSTALL vim
          ;;
        zsh)
          UNINSTALL zsh
          ;;
        all)
          UNINSTALL abook
          UNINSTALL git
          UNINSTALL irssi
          UNINSTALL mutt
          UNINSTALL kanata
          UNINSTALL systemd
          UNINSTALL tmux
          UNINSTALL vim
          UNINSTALL zsh
          ;;
        *)
          AVAILABLE_DOTFILES
          ;;
      esac
      ;;
    *)
      HELP
      ;;
  esac
else
  HELP
fi

exit 0
